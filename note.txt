http://m.ehaoyao.com/api/mds/api/app/apiv3_0/goodsBaseInfoMsite.json?groupId=442388&memberId&pharmacyId=25&coonType=5&cityId=027

1、customize-cra 配置webpack的一些操作（进入官网）
  - 创建config-overrides.js
  实例：
  ```
    module.exports = override(
      fixBabelImports('import', {//导入antd-mobile
        libraryName: 'antd-mobile',
        style: 'css',
      }),
      addWebpackAlias({ //配置别名
        assets: path.resolve(__dirname, './src/assets'),
        pages: path.resolve(__dirname, './src/pages'),
        components: path.resolve(__dirname, './src/components'),
        utils: path.resolve(__dirname, './src/utils')
      }),    
  )

  ```

2、styled components 基本使用方法？
参考：https://blog.csdn.net/weixin_34111790/article/details/88687164


3、详情页接口
  http://m.ehaoyao.com/api/mds/api/app/apiv3_0/goodsBaseInfoMsite.json?groupId=442388&memberId&pharmacyId=25&coonType=5&cityId=027

4、解决内存泄漏的方法
原因：当我们点击组件A后，组件A需要3秒的时间才能获取到数据并重新更新num的值，假如我们在这3秒内点击一次组件B，
表示卸载组件A，但是组件A的数据请求依然还在，当请求成功后，组件A已经不存在，此时就会报这个警告(大概意思就是：你组件都没了，你还设置个啥)

方法：
```
     function inject_unount (target){
        // 改装componentWillUnmount，销毁的时候记录一下
        let next = target.prototype.componentWillUnmount
        target.prototype.componentWillUnmount = function () {
            if (next) next.call(this, ...arguments);
            this.unmount = true
         }
         // 对setState的改装，setState查看目前是否已经销毁
        let setState = target.prototype.setState
        target.prototype.setState = function () {
            if ( this.unmount ) return ;
            setState.call(this, ...arguments)
        }
    }

```
5、react在线编辑器
https://stackblitz.com/edit/react-sq5a68
https://codesandbox.io/s/funny-taussig-mr8gr

6、容器组件和UI组件
  容器组件：只用于逻辑处理，有自己的状态和生命周期钩子
  UI组件（presentation）：一般没有状态，只有来展示内容
7、模块划分：按功能划分和按角色划分
  功能划分：home和category功能放在一起
  角色划分：比如：reducers放一起sagas放一起
8、git checkout -b 2019-12-11 7567dbb4f66b5

9、axios 请求要携带cookie，需要在全局配置
  import axios from 'axios'
  axios.defaults.withCredentials=true
10、obj（判断对象中是否包含某个key属性）
  !("key" in obj)    //不包含
  obj.hasOwnProperty("key")   //包含